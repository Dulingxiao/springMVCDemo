<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.dlx.mybatis.mapper.UserMapper">

    <resultMap type="User" id="userMap" autoMapping="true">
        <id column="id" property="id"/>
    </resultMap>
    <sql id="column">
        id, user_name, password, name, age, sex, birthday, created, updated
    </sql>


    <select id="queryUserById" resultType="User" parameterType="Integer" >
        select <include refid="column"></include> from tb_user where id = #{id}
    </select>

    <select id="queryUserByIds" resultType="User">
        select <include refid="column"></include> from tb_user where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>


    </select>
    
    <select id="queryUserByUserName" resultType="User" parameterType="String" >

        select <include refid="column"></include> from tb_user where sex = 1 
        <if test="userName!=null and userName.trim()!=''">
        and user_name like  '%${userName}%'
        </if>
        

       <!--  select <include refid="column"></include> from tb_user where user_name like  '%${userName}%' -->
<!--         select <include refid="column"></include> from tb_user where user_name like  '%' #{userName} '%' -->
<!--         select <include refid="column"></include> from tb_user where user_name like  concat('%',#{userName},'%') -->
    </select>

    <!-- 查询男性用户，如果输入了用户名则按照用户名模糊查找，否则如果输入了年龄则按照年龄查找，否则查找用户名为“zhangsan”的用户。 -->
    <select id="queryUserByUserNameOrAge" resultMap="userMap">
            select <include refid="column"></include> from tb_user where sex = 1
            <choose>
                <when test="userName != null and userName.trim() != ''">
                    and user_name like '%' #{userName} '%'
                </when>
                <when test="age != null">
                    and age &lt; #{age}
                </when>
                <otherwise>
                    and user_name = 'zhangsan'
                </otherwise>
            </choose> 
    </select>

    <!-- 查询所有用户，如果输入了用户名按照用户名进行模糊查询，如果输入年龄，按照年龄进行查询，如果两者都输入，两个条件都要成立 -->
    <select id="queryUserByUserNameAndAge" resultMap="userMap">
            select <include refid="column"></include> from tb_user 
            <where>
                <if test="userName != null and userName.trim() != ''"> and user_name like '%' #{userName} '%'</if>
                <if test="age != null">and age &lt; #{age}</if>
            </where>
    </select>


    <select id="login" resultMap="userMap" parameterType="String" >
        select * from tb_user where user_name = #{userName} and password = #{password}
    </select>

    <select id="loginMap" resultType="User" >
        select * from tb_user where user_name = #{userName} and password = #{password}
    </select>
    
    <select id="queryUserByTableName" resultType="User" >
        select * from ${tableName}
    </select>
    
    <select id="queryUserAll" resultMap="userMap">
        select <include refid="CommonSQL.commonSql"></include> from tb_user
    </select>
    
    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyColumn="id" keyProperty="id" >
        INSERT INTO demo.tb_user (id, name, age)
        VALUES
            (#{id}, #{name}, #{age});
    </insert>
    
    <update id="updateUser" parameterType="User" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        UPDATE demo.tb_user
        <set>
            <if test="userName!=null and userName.trim()!=''">user_name = #{userName},</if>
            <if test="password!=null and password.trim()!=''">password = #{password},</if>
            <if test="name!=null and name.trim()!=''">name = #{name},</if>
            <if test="age!=null">age = #{age},</if>
            <if test="sex!=null">sex = #{sex}</if>
        </set>
        WHERE
            (id = #{id});
    </update>
    
    <delete id="deleteUserById" parameterType="Integer">
        delete from tb_user where id = #{id}
    
    </delete>
</mapper>
  
  
  
  
  
  